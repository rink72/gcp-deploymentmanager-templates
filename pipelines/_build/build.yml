# Pipeline to create an artifact on any commit to master

name: aws-lab artifact build


# Against any merge this will trigger a build of the artifact.
trigger:
  branches:
    include:
      - '*'

resources:
  pipelines:
  - pipeline: rink72lab   # Name we give to the pipeline resource
    source: build - rink72.lab # Name of the triggering pipeline
    trigger: 
      branches:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  artifactName: awslab
  collectionArtifactName: rink72.lab

steps:

  # Checkout aws-lab repo
  # Note, s is the default path for checking out all repositories
- checkout: self
  clean: true
  path: s

# Download ansible collections
- task: DownloadPipelineArtifact@2
  displayName: Download Ansible Collections
  inputs:
    buildType: 'specific'
    project: '43a89b94-36f9-4d52-a15b-33e023304590'
    definition: '24'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latestFromBranch'
    branchName: 'refs/heads/master'
    artifactName: 'rink72.lab'
    targetPath: '$(Pipeline.Workspace)/$(collectionArtifactName)'

- pwsh: |
    # Change to ansible directory
    $null = Set-Location -Path '$(Pipeline.Workspace)/s/ansible/'
    # Get ansible collection tar files to install
    $collectionTars = Get-ChildItem -Path '$(Pipeline.Workspace)/$(collectionArtifactName)/*.tar.gz'
    # Install each collection
    foreach($tar in $collectionTars) {
      ansible-galaxy collection install $tar.FullName
    }
  displayName: Install Ansible Collections


# Version the artifact and tf-iac-live repo
# The workingPath variable tells gitversion which repo to version under the default 's' path
- task: GitVersion@5
  displayName: Version build artifact
  inputs:
    runtime: "core"

- task: CopyFiles@2
  displayName: Copy artifact files to staging directory
  inputs:
    SourceFolder: $(Pipeline.Workspace)/s/
    Contents: '**'
    TargetFolder: $(build.artifactstagingdirectory)

# Publish the pipeline artifact
- publish: $(build.artifactstagingdirectory)
  artifact: $(artifactName)
  displayName: Publish $(artifactName) artifact