# Pipeline to build AWS AMI Images

name: AWS-AMI-PackerBuild

variables:
  # Variable group containing AWS credentials for account used to create images
  - group: aws-pwrc-sam-exp
  # Variable group containing VM default admin password
  - group: vm-variables
  # Comma delimited list of accounts to share AMI with
  - name: awsAccounts
    value: ""
  - name: packerRoot
    value: packer
  - name: maxDays
    value: 30

trigger: none

pool:
  vmImage: "windows-latest"

stages:
  - template: _templates/build-packer-image.yml
    parameters:
      stageName: Win2019Core
      displayName: Build Server 2019 Core AMI
      jobName: Win2019Core
      jobDisplayName: Build Server 2019 Core
      buildFolder: server2019-core

  - template: _templates/build-packer-image.yml
    parameters:
      stageName: Win2019Full
      displayName: Build Server 2019 Full AMI
      jobName: Win2019Full
      jobDisplayName: Build Server 2019 Full
      buildFolder: server2019-full

  - template: _templates/build-packer-image.yml
    parameters:
      stageName: CentOS7
      displayName: Build CentOS7 AMI
      jobName: CentOS7
      jobDisplayName: Build CentOS7
      buildFolder: centos7

  - stage: StgCleanOldAMIs
    displayName: Clean old AMI's
    dependsOn: [StgWin2019Full, StgWin2019Core, StgCentOS7]
    jobs:
      - job: JobWin2019Full
        displayName: Clean old AMI's
        variables:
          buildFolder: server2019-full
        steps:
          - pwsh: |
              Install-Module AWSPowershell.NetCore -Force
            name: StepBootstrapAgent
            displayName: Bootstrap Agent

          - task: PowerShell@2
            displayName: Remove old AMI's
            inputs:
              pwsh: true
              targetType: filePath
              filePath: ./$(packerRoot)/Remove-AMI.ps1
            env:
              # Only secrets need to be manually mapped to env variables. Normal variables will automatically be mapped to env vars.
              # We also map AWS_ACCESS_KEY_ID, AWS_REGION as the variable name is different to what is required.
              AWS_ACCESS_KEY_ID: $(aws-pwrc-sam-exp-username) # From AWS-pwrc-sam-exp
              AWS_SECRET_ACCESS_KEY: $(aws-pwrc-sam-exp-secret) # From AWS-pwrc-sam-exp
              AWS_REGION: $(aws-pwrc-sam-exp-region) # From AWS-pwrc-sam-exp

